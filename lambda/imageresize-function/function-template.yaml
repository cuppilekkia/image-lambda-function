AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.
Resources:
  testimageresizeevetesteveresizeAVL1ITL7RWOG:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: .
      Description: ''
      MemorySize: 256
      Timeout: 5
      Role: !GetAtt ImageResizeLambdaRole.Arn
      Events:
        Api1:
          Type: Api
          Properties:
            Path: '/{proxy+}'
            Method: ANY
      Environment:
        Variables:
          SOURCE_BUCKET: original-imageresize-eve
          DEST_BUCKET: test-imageresize-eve
          URL: 'http://test-imageresize-eve.s3-website-us-west-2.amazonaws.com'
          CDN_ID: 'E1SZ9OG862IQUR'
  ImageResizeLambdaRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: LambdaCreateInvalidationPolicy
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action: 'cloudfront:CreateInvalidation'
                Resource: '*'